# -*- coding: utf-8 -*-
"""
__project_ = 'hjp-bilink'
__file_name__ = 'view_batch_node_models.py'
__author__ = '十五'
__email__ = '564298339@qq.com'
__time__ = '2023/2/27 6:04'
"""

from .basic_models import *
from .view_node_models import 类型_视图结点属性项

@dataclass
class 类型_视图批量结点数据源:
    视图数据:"类型_视图数据"=None
    结点编号集:"list[类型_结点编号]"=None
    pass


class 类型_视图批量结点模型(基类_模型):
    数据源:"类型_视图批量结点数据源"
    优先级: 类型_视图结点属性项 = field(default_factory=lambda: 类型_视图结点属性项(
            字段名=枚举.结点.优先级,
            展示名=译.结点优先级,
            说明=译.说明_结点优先级,
            保存到上级=1,
            从上级读数据=1,  # 从上级读数据的意思是从上级读数据到视图数据中,
            可展示=1,  # 需要对应的展示组件, 这里的展示是指展示在卡片详情中
            可展示中编辑=1,  # 需要对应的可展示中编辑组件, 与可展示联合判断

            用户可访=1,  # 用户可以用自定义的python语句访问到这个变量的值
            # 读取函数=None,
            组件类型=枚举.组件类型.slider,  # 展示用的组件
            # 组件传值方式=None,
            # 保存值的函数=None, # 当不能直接保存到视图中时, 采用这个函数保存
            有限制=1,
            限制=[-100, 100],
            默认值=0,
            值类型=枚举.值类型.数值,
            值解释="-100 or 100"
            # 自定义组件=lambda 项:widgets.自定义组件.视图结点属性.优先级(项),
    ))
    角色: 类型_视图结点属性项 = field(default_factory=lambda: 类型_视图结点属性项(
            字段名=枚举.结点.角色,
            展示名=译.结点角色,
            说明=译.说明_结点角色,
            从上级读数据=1,
            保存到上级=1,
            可展示=1,  # 需要对应的展示组件, 这里的展示是指展示在卡片详情中
            可展示中编辑=1,  # 需要对应的可展示中编辑组件, 与可展示联合判断

            用户可访=1,  # 用户可以用自定义的python语句访问到这个变量的值
            # 读取函数=None,
            组件类型=枚举.组件类型.customize,  # 展示用的组件
            自定义组件=lambda 项: widgets.自定义组件.视图结点属性.角色多选(项),
            默认值=-1,# TODO 默认值今后要改成[] 角色可以多选了, 对应的组件样子也要改
            值类型=枚举.值类型.数值,
            值解释=" 0 or 5 if no role then -1 "
    ))
    主要结点: 类型_视图结点属性项 = field(default_factory=lambda: 类型_视图结点属性项(
            字段名=枚举.结点.主要结点,
            展示名=译.主要结点,
            说明=译.说明_主要结点,
            从上级读数据=1,  # 从上级读数据的意思是从上级读数据到视图数据中,
            保存到上级=1,
            可展示=1,  # 需要对应的展示组件, 这里的展示是指展示在卡片详情中
            可展示中编辑=1,  # 需要对应的可展示中编辑组件, 与可展示联合判断

            用户可访=1,  # 用户可以用自定义的python语句访问到这个变量的值
            默认值=False,
            组件类型=枚举.组件类型.checkbox,  # 展示用的组件
            值类型=枚举.值类型.布尔,
            值解释="True or False",
            # 组件传值方式=None,
            # 保存值的函数=None, # 当不能直接保存到视图中时, 采用这个函数保存
            # 有限制=0,
            # 限制=field(default_factory=lambda: [0, funcs.G.src_admin.MAXINT]),
            # 自定义组件=None,
    ))

    需要复习: 类型_视图结点属性项 = field(default_factory=lambda: 类型_视图结点属性项(
            字段名=枚举.结点.需要复习,
            展示名=译.需要复习,
            说明=译.说明_需要复习,
            从上级读数据=1,  # 从上级读数据的意思是从上级读数据到视图数据中,
            保存到上级=1,
            可展示=1,  # 需要对应的展示组件, 这里的展示是指展示在卡片详情中
            可展示中编辑=1,  # 需要对应的可展示中编辑组件, 与可展示联合判断
            用户可访=1,  # 用户可以用自定义的python语句访问到这个变量的值
            # 读取函数=None,
            组件类型=枚举.组件类型.checkbox,  # 展示用的组件
            # 组件传值方式=None,
            # 保存值的函数=None, # 当不能直接保存到视图中时, 采用这个函数保存
            # 有限制=0,
            # 限制=field(default_factory=lambda: [0, funcs.G.src_admin.MAXINT]),
            # 自定义组件=None,
            默认值=True,
            值类型=枚举.值类型.布尔,
            值解释="True or False",
    ))

    必须复习: 类型_视图结点属性项 = field(default_factory=lambda: 类型_视图结点属性项(
            字段名=枚举.结点.必须复习,
            展示名=译.必须复习,
            说明=译.说明_必须复习,
            从上级读数据=1,  # 从上级读数据的意思是从上级读数据到视图数据中,
            保存到上级=1,
            可展示=1,  # 需要对应的展示组件, 这里的展示是指展示在卡片详情中
            可展示中编辑=1,  # 需要对应的可展示中编辑组件, 与可展示联合判断
            用户可访=1,  # 用户可以用自定义的python语句访问到这个变量的值
            # 读取函数=None,
            组件类型=枚举.组件类型.checkbox,  # 展示用的组件
            # 组件传值方式=None,
            # 保存值的函数=None, # 当不能直接保存到视图中时, 采用这个函数保存
            # 有限制=0,
            # 限制=field(default_factory=lambda: [0, funcs.G.src_admin.MAXINT]),
            # 自定义组件=None,
            默认值=False,
            值类型=枚举.值类型.布尔,
            值解释="True or False",
    ))

    漫游起点: 类型_视图结点属性项 = field(default_factory=lambda: 类型_视图结点属性项(
            字段名=枚举.结点.漫游起点,
            展示名=译.漫游起点,
            说明=译.说明_漫游起点,
            从上级读数据=1,  # 从上级读数据的意思是从上级读数据到视图数据中,
            可展示=1,  # 需要对应的展示组件, 这里的展示是指展示在卡片详情中
            可展示中编辑=1,  # 需要对应的可展示中编辑组件, 与可展示联合判断
            保存到上级=1,
            用户可访=1,  # 用户可以用自定义的python语句访问到这个变量的值
            # 读取函数=None,
            组件类型=枚举.组件类型.checkbox,  # 展示用的组件
            # 组件传值方式=None,
            # 保存值的函数=None, # 当不能直接保存到视图中时, 采用这个函数保存
            # 有限制=0,
            # 限制=field(default_factory=lambda: [0, funcs.G.src_admin.MAXINT]),
            # 自定义组件=None,
            默认值=False,
            值类型=枚举.值类型.布尔,
            值解释="True or False",
    ))

    def 初始化(self, *args):
        pass
